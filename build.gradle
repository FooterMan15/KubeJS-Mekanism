plugins {
    id "dev.architectury.loom" version "0.11.0-SNAPSHOT"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "io.github.juuxel.loom-quiltflower" version "1.7.1"
    id 'maven-publish'
}

apply from: 'https://files.latmod.com/public/markdown-git-changelog.gradle'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_17

def ENV = System.getenv()
version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: 9999}"
archivesBaseName = project.archives_base_name
group = project.maven_group

loom {
    silentMojangMappingsLicense()
}

repositories {
    maven {
        url "https://maven.architectury.dev/"
    }

    maven {
        url "https://modmaven.dev/"
        content {
            includeGroup "mekanism"
            includeGroup "mezz.jei"
        }
    }

    maven {
        url "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.ftb.mods"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()

    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    modApi "dev.latvian.mods:kubejs-forge:${project.kubejs_version}"

    modCompileOnly "mekanism:Mekanism:${project.mekanism_version}:api"

    // for testing
    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}" // core
    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}:additions" // additions
    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}:generators" // generators
    modLocalRuntime "mekanism:Mekanism:${project.mekanism_version}:tools" // tools

    modImplementation "mezz.jei:jei-1.18.2:${jei_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    def targetVersion = 17
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archivesBaseName
            artifact(remapJar) {
                classifier null
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        if (ENV.SAPS_TOKEN) {
            maven {
                url "https://maven.saps.dev/minecraft"
                credentials {
                    username = "latvian"
                    password = "${ENV.SAPS_TOKEN}"
                }
            }
        }
    }
}

if (ENV.CURSEFORGE_KEY) {
    curseforge {
        apiKey = ENV.CURSEFORGE_KEY
        project {
            id = project.curseforge_id
            releaseType = project.curseforge_type
            addGameVersion "Forge"
            addGameVersion "1.18.2"
            mainArtifact(remapJar.archivePath)
            relations {
                requiredDependency 'kubejs-forge'
                requiredDependency 'mekanism'
            }
            changelog = getGitChangelog
            changelogType = 'markdown'
        }
    }
}
